name: Versionamento Semântico

on:
  push:
    branches:
      - master

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
      - name: Checar repositório
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Instalar dependências
        run: npm install

      - name: Instalar semver
        run: npm install -g semver

      - name: Calcular nova versão
        id: version
        run: |
          git fetch --tags
          CURRENT_VERSION=$(git describe --tags --abbrev=0)
          echo "Versão Atual: $CURRENT_VERSION"
          
          # Obtendo mensagens de commit
          COMMITS=$(git log ${CURRENT_VERSION}..HEAD --pretty=format:"%s")
          
          # Inicializando variáveis
          MAJOR=0
          MINOR=0
          PATCH=0
          
          # Analisando mensagens de commit
          for COMMIT in $COMMITS; do
            if [[ $COMMIT == *"BREAKING CHANGE"* ]]; then
              MAJOR=1
            elif [[ $COMMIT == *"feat"* ]]; then
              MINOR=1
            elif [[ $COMMIT == *"fix"* ]]; then
              PATCH=1
            fi
          done
          
          # Calculando a nova versão usando semver
          NEW_VERSION=$CURRENT_VERSION
          if [[ $MAJOR -eq 1 ]]; then
            NEW_VERSION=$(semver -i major $CURRENT_VERSION)
          elif [[ $MINOR -eq 1 ]]; then
            NEW_VERSION=$(semver -i minor $CURRENT_VERSION)
          elif [[ $PATCH -eq 1 ]]; then
            NEW_VERSION=$(semver -i patch $CURRENT_VERSION)
          fi
          
          echo "Nova versão: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Atualizar versão no package.json
        run: |
          npm version ${{ env.new_version }} --no-git-tag-version
          
      - name: Commit e push
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add package.json
          git commit -m "chore(release): version ${{ env.new_version }}"
          git tag v${{ env.new_version }}
          git push origin master --tags
          